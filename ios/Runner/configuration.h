// Autogenerated from Pigeon (v3.0.3), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, AppThemes) {
  AppThemesDark = 0,
  AppThemesLight = 1,
};

typedef NS_ENUM(NSUInteger, AppVersion) {
  AppVersionDev = 0,
  AppVersionBeta = 1,
  AppVersionStagging = 2,
};

@class UserModel;
@class AppThemesResult;
@class AppVersionResult;
@class Version;

@interface UserModel : NSObject
+ (instancetype)makeWithUserName:(nullable NSString *)userName
    userPassword:(nullable NSString *)userPassword;
@property(nonatomic, copy, nullable) NSString * userName;
@property(nonatomic, copy, nullable) NSString * userPassword;
@end

@interface AppThemesResult : NSObject
+ (instancetype)makeWithErrorMessage:(nullable NSString *)errorMessage
    state:(AppThemes)state;
@property(nonatomic, copy, nullable) NSString * errorMessage;
@property(nonatomic, assign) AppThemes state;
@end

@interface AppVersionResult : NSObject
+ (instancetype)makeWithErrorMessage:(nullable NSString *)errorMessage
    version:(AppVersion)version;
@property(nonatomic, copy, nullable) NSString * errorMessage;
@property(nonatomic, assign) AppVersion version;
@end

@interface Version : NSObject
+ (instancetype)makeWithMajor:(nullable NSNumber *)major
    minor:(nullable NSNumber *)minor
    patch:(nullable NSNumber *)patch;
@property(nonatomic, strong, nullable) NSNumber * major;
@property(nonatomic, strong, nullable) NSNumber * minor;
@property(nonatomic, strong, nullable) NSNumber * patch;
@end

/// The codec used by ConfigurationApi.
NSObject<FlutterMessageCodec> *ConfigurationApiGetCodec(void);

@protocol ConfigurationApi
- (nullable AppThemesResult *)fetchThemeWithError:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable AppVersionResult *)fetchVersionWithError:(FlutterError *_Nullable *_Nonnull)error;
- (nullable UserModel *)fetchUserWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)updateVersionVersion:(Version *)version error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSString *)fetchCurrentWithError:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void ConfigurationApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<ConfigurationApi> *_Nullable api);

NS_ASSUME_NONNULL_END
